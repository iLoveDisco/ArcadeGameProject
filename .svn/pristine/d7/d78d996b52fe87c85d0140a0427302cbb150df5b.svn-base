import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;

/**
 * 
 * This object is the rocks that appear by the undug dirt in the level. The
 * rocks fall when the dirt is dug under the rock.
 *
 * @author colomeda. Created Feb 16, 2018.
 */
public class Rock extends GameObject {

	public Rectangle2D.Double rect;
	public boolean isDirtBeneath = true;
	public int fallTimer = 0;
	private boolean hitDirt;

	/**
	 * 
	 * TODO Put here a description of what this constructor does.
	 *
	 * @param x
	 * @param y
	 * @param handler
	 */
	public Rock(int x, int y, GameObjectHandler handler) {
		super(x, y, handler);
		this.rect = new Rectangle2D.Double(this.x, this.y, this.BLOCKSIZE, this.BLOCKSIZE);
		this.dy = 4;
	}

	@Override
	public void render(Graphics2D g2) {
		if (this.fallTimer % 8 == 0) {
			g2.setColor(java.awt.Color.GRAY);
		} else {
			g2.setColor(java.awt.Color.WHITE);
		}
		this.rect = new Rectangle2D.Double(this.x, this.y, this.BLOCKSIZE, this.BLOCKSIZE);
		g2.fill(this.rect);
		if (this.isDirtBeneath) {
			this.checkForFall();
		}
		if (!this.isDirtBeneath) {
			this.fall();
		}
	}

	private void fall() {
		if (this.fallTimer >= 60) {
			this.y += this.dy;

		} else {
			this.fallTimer++;
		}
	}

	public void die() {
		this.shouldRemove = true;
	}

	private void checkForFall() {
		Hero hero = handler.hero;
		if ((hero.y == this.y + 53) && (hero.x == this.x)) {
			this.isDirtBeneath = false;
		}
	}

	@Override
	void collideWith(GameObject other) {

	}

	@Override
	void collideWithDirt(Dirt thisDirt) {
		if ((thisDirt.rect.intersects(this.rect) && !thisDirt.isDug) || this.y >= 892) {
			this.die();
		}
	}

	@Override
	void collideWithHero(Hero hero) {
		hero.collideWithRock(this);
	}

	@Override
	void collideWithMonster(Monster thisMonster) {
		thisMonster.collideWithRock(this);
	}

	@Override
	void collideWithRock(Rock thisRock) {
		// Does nothing
	}

	@Override
	void collideWithFire(Rectangle2D.Double fireRect) {
		// Does nothing
	}

	@Override
	void collideWithPump(Rectangle2D.Double pumpRect) {
		if (pumpRect.intersects(this.rect)) {
			handler.hero.pumpOut = false;
		}
	}

	@Override
	void collideWithFruit(Fruit fruit) {
		// Does nothing
	}

	@Override
	void collideWithOneUp(OneUp oneUp) {
		// Does nothing
	}
}
