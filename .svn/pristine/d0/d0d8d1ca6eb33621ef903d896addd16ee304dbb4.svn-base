import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;

public class Rock extends GameObject{
	
	public Rectangle2D.Double rect;
	private static final int rockWIDTH = 53, rockHEIGHT = 53;
	public boolean isDirtBeneath = true;
	public int dy = 4;
	private GameObjectHandler handler;
	public int fallTimer = 0;
	private boolean hitDirt;
	public Rock(int x, int y, ID id, GameObjectHandler handler) {
		super(x, y, id, handler);
		this.rect = new Rectangle2D.Double(this.x, this.y, rockWIDTH, rockHEIGHT);
		this.handler = handler;
	}

	@Override
	public void tick() {
		return;
	}

	@Override
	public void render(Graphics2D g2) {
		if(this.fallTimer % 4 == 0){
			g2.setColor(java.awt.Color.GRAY);
		} else {
			g2.setColor(java.awt.Color.WHITE);
		}
		this.rect = new Rectangle2D.Double(this.x, this.y, rockWIDTH, rockHEIGHT);
		g2.fill(this.rect);
		if(this.isDirtBeneath){
			this.checkForFall();
		}
		if(!this.isDirtBeneath){
			this.fall();
		}
	}
	
	private void fall() {
		if(this.fallTimer >= 60){
			this.y += this.dy;
			this.checkForStop();
			if(this.hitDirt){
				this.handler.fallenRocks++;
				this.die();
				return;
			}
		} else {
			this.fallTimer++;
		}
	}
	
	private void checkForStop() {
		for(int i = 0; i < handler.objects.size(); i++){
			GameObject object = handler.objects.get(i);
			if(object.getID().equals(ID.Dirt)){
				Dirt dirt = (Dirt) object;
				if((!dirt.isDug && (dirt.rect.intersects(this.rect)) && (dirt.x == this.x)) || this.y > 892){
					this.hitDirt = true;
				}
			}
		}
		
	}
	
	private void die(){
		this.handler.removeObject(this);
	}

	private void checkForFall(){
		for(int i = 0; i < handler.objects.size(); i++){
			GameObject object = handler.objects.get(i);
			if(object.getID().equals(ID.Hero)){
				Hero hero = (Hero) object;
				if((hero.y == this.y + 53) && (hero.x == this.x)){
					this.isDirtBeneath = false;
				}
			}
		}
	}
}
